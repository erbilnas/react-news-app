{"version":3,"sources":["redux/actionTypes.js","redux/reducers/newsReducer.js","redux/reducers/loaderReducer.js","redux/reducers/errorReducer.js","redux/reducers/sessionReducer.js","redux/reducers/rootReducer.js","redux/store.js","redux/actions.js","redux/services.js","redux/selectors.js","pages/NewsHub.js","pages/LoginPage.js","routers/route.js","routers/NavigationRoute.js","pages/LandingPage.js","components/Navbar.js","components/Footer.js","pages/ErrorPage.js","App.js","index.js"],"names":["actionTypes","FETCH_REQUEST","FETCH_SUCCESS","FETCH_ERROR","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_ERROR","newsReducer","state","type","payload","types","loaderReducer","errorReducer","combineReducers","user","email","isAuthenticated","token","idToken","sessionPersistConfig","key","storage","whitelist","news","loader","error","session","persistReducer","sessionReducer","rootPersistConfig","persistedReducer","rootReducer","middleware","applyMiddleware","thunk","enhancer","composeWithDevTools","store","createStore","persistor","persistStore","actions","fetchRequest","fetchSuccess","fetchError","loginRequest","loginSuccess","data","loginError","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","services","fetchNews","dispatch","options","method","url","axios","then","articles","catch","login","mail","password","auth","signInWithEmailAndPassword","userCredential","selectors","getNews","getLoader","getError","getAuth","getUser","mapDispatchToProps","connect","isLoading","isError","useEffect","className","undefined","map","title","urlToImage","author","content","Card","border","style","width","Img","variant","src","Body","Title","Subtitle","Text","Button","href","useForm","register","handleSubmit","errors","history","useHistory","onSubmit","e","a","Email","Password","target","reset","push","textAlign","color","Form","Group","Label","marginLeft","Control","placeholder","name","ref","required","maxLength","mainRouter","HOME","NEWS","LOGIN","ERROR","NavigationRoute","path","routes","component","Alert","Heading","NewsHub","LoginPage","NavigationBar","navbar","item","exact","to","activeStyle","Navbar","sticky","bg","Nav","Footer","ErrorPage","App","router","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cb3788f.chunk.js","sourcesContent":["const actionTypes = {\n    FETCH_REQUEST: 'news/FETCH_REQUEST',\n    FETCH_SUCCESS: 'news/FETCH_SUCCESS',\n    FETCH_ERROR: 'news/FETCH_ERROR',\n    LOGIN_REQUEST: 'session/LOGIN_REQUEST',\n    LOGIN_SUCCESS: 'session/LOGIN_SUCCESS',\n    LOGIN_ERROR: 'session/LOGIN_ERROR'\n}\n\nexport default actionTypes","import types from '../actionTypes'\n\nconst newsReducer = (state = [], { type, payload }) => {\n    switch (type) {\n        case types.FETCH_SUCCESS:\n            return payload\n        default:\n            return state\n    }\n}\n\nexport default newsReducer","import types from '../actionTypes'\n\nconst loaderReducer = (state = false, { type }) => {\n    switch (type) {\n        case types.FETCH_REQUEST:\n            return true\n        case types.FETCH_SUCCESS:\n        case types.FETCH_ERROR:\n            return false\n        default:\n            return state\n    }\n}\n\nexport default loaderReducer","import types from '../actionTypes'\n\nconst errorReducer = (state = null, { type, payload }) => {\n    switch (type) {\n        case types.FETCH_REQUEST:\n        case types.FETCH_SUCCESS:\n            return null\n        case types.FETCH_ERROR:\n            return payload\n        case types.LOGIN_ERROR:\n            return payload\n        default:\n            return state\n    }\n}\n\nexport default errorReducer","import { combineReducers } from 'redux'\nimport types from '../actionTypes'\n\nconst user = (state = null, { type, payload }) => {\n    switch (type) {\n        case types.LOGIN_SUCCESS:\n            return payload.email\n        case types.LOGIN_ERROR:\n            return null\n        default:\n            return state\n    }\n};\n\nconst isAuthenticated = (state = false, { type }) => {\n    switch (type) {\n        case types.LOGIN_SUCCESS:\n            return true\n        case types.LOGIN_ERROR:\n            return false\n        default:\n            return state\n    }\n};\n\nconst token = (state = null, { type, payload }) => {\n    switch (type) {\n        case types.LOGIN_SUCCESS:\n            return payload.idToken\n\n        case types.LOGIN_ERROR:\n            return null\n\n        default:\n            return state\n    }\n};\n\nexport default combineReducers({\n    user,\n    isAuthenticated,\n    token,\n})\n","import { combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport newsReducer from './newsReducer'\nimport loaderReducer from './loaderReducer'\nimport errorReducer from './errorReducer'\nimport sessionReducer from './sessionReducer'\n\nconst sessionPersistConfig = {\n    key: 'session',\n    storage,\n    whitelist: ['token', 'isAuthenticated', 'user'],\n}\n\nexport default combineReducers({\n    news: newsReducer,\n    loader: loaderReducer,\n    error: errorReducer,\n    session: persistReducer(sessionPersistConfig, sessionReducer),\n})\n","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers/rootReducer';\n\nconst rootPersistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['session'],\n};\n\nconst persistedReducer = persistReducer(rootPersistConfig, rootReducer);\n\nconst middleware = applyMiddleware(thunk);\nconst enhancer = composeWithDevTools(middleware);\n\nexport const store = createStore(persistedReducer, enhancer);\nexport const persistor = persistStore(store);","import types from './actionTypes'\n\nconst fetchRequest = () => ({\n    type: types.FETCH_REQUEST,\n})\n\nconst fetchSuccess = (news) => ({\n    type: types.FETCH_SUCCESS,\n    payload: news,\n})\n\nconst fetchError = (error) => ({\n    type: types.FETCH_ERROR,\n    payload: error,\n})\n\nconst loginRequest = () => ({\n    type: types.LOGIN_REQUEST,\n})\n\nconst loginSuccess = (data) => ({\n    type: types.LOGIN_SUCCESS,\n    payload: data,\n})\n\nconst loginError = (error) => ({\n    type: types.LOGIN_ERROR,\n    payload: error,\n})\n\nconst actions = { fetchRequest, fetchSuccess, fetchError, loginRequest, loginSuccess, loginError }\n\nexport default actions","import axios from 'axios'\nimport actions from './actions'\nimport firebase from 'firebase'\n\nconst NEWS_API_KEY = '3aaa1e89ba28471f8dd450c90188d7f3'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDBLIJ-0KMxwCvHE64uXumYmutOc1C_kjg\",\n    authDomain: \"react-news-app-ba783.firebaseapp.com\",\n    projectId: \"react-news-app-ba783\",\n    storageBucket: \"react-news-app-ba783.appspot.com\",\n    messagingSenderId: \"89221672753\",\n    appId: \"1:89221672753:web:3c0be128f08875623cca10\",\n    measurementId: \"G-LFXR3CY549\",\n}\n\nfirebase.initializeApp(firebaseConfig)\nfirebase.analytics()\n\nconst fetchNews = () => (dispatch) => {\n    const options = {\n        method: 'GET',\n        url: `http://newsapi.org/v2/top-headlines?country=tr&apiKey=${NEWS_API_KEY}`,\n    }\n\n    axios(options)\n        .then(({ data: { articles } }) => {\n            dispatch(actions.fetchSuccess(articles))\n        })\n        .catch((error) => {\n            dispatch(actions.fetchError(error))\n        })\n}\n\nconst login = (mail, password) => (dispatch) => {\n    firebase.auth().signInWithEmailAndPassword(mail, password)\n        .then((userCredential) => {\n            dispatch(actions.loginSuccess(userCredential))\n        })\n        .catch((error) => {\n            dispatch(actions.loginError(error))\n        })\n}\n\nconst services = { fetchNews, login }\n\nexport default services","const getNews = (state) => state.news\nconst getLoader = (state) => state.loader\nconst getError = (state) => state.error\nconst getAuth = (state) => state.session.isAuthenticated\nconst getUser = (state) => state.session.user\n\nconst selectors = { getNews, getLoader, getError, getAuth, getUser }\n\nexport default selectors\n","import React, { useEffect } from 'react'\nimport { Card, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport services from '../redux/services'\nimport selectors from '../redux/selectors'\n\nconst NewsHub = ({ news, isLoading, isError, fetchNews }) => {\n    useEffect(() => {\n        fetchNews()\n    }, [])\n\n    return (\n        <>\n            <div>\n                {isError && <div className=\"errorText\">SOMETHING WENT WRONG...</div>}\n                {isLoading && <h2>LOADING...</h2>}\n            </div>\n            <div className=\"cards-container\">\n                {news !== undefined &&\n                    news.map(({ title, urlToImage, author, content, url }) => {\n                        return (\n                            <Card border=\"dark\" style={{ width: '18rem' }} key={title} className=\"card\">\n                                <Card.Img variant=\"top\" src={urlToImage} />\n                                <Card.Body>\n                                    <Card.Title>{title}</Card.Title>\n                                    <Card.Subtitle>Author: {author}</Card.Subtitle>\n                                    <Card.Text>{content}</Card.Text>\n                                    <Button variant=\"info\" href={url}>READ MORE</Button>\n                                </Card.Body>\n                            </Card>\n                        )\n                    })}\n            </div>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    news: selectors.getNews(state),\n    isLoading: selectors.getLoader(state),\n    isError: selectors.getError(state)\n});\n\nconst mapDispatchToProps = {\n    fetchNews: services.fetchNews\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewsHub)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useForm } from 'react-hook-form'\nimport { useHistory } from 'react-router-dom'\nimport { Button, Form } from 'react-bootstrap'\nimport services from '../redux/services'\nimport selectors from '../redux/selectors'\n\nconst LoginPage = ({ isAuthenticated, isError, login }) => {\n    const { register, handleSubmit, errors } = useForm()\n    const history = useHistory()\n\n    const onSubmit = async (data, e) => {\n        login(data.Email, data.Password)\n        e.target.reset()\n    };\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            history.push('/profile')\n        }\n    }, [isAuthenticated])\n\n    return (\n        <>\n            {isAuthenticated\n                ? (<h2 style={{ textAlign: 'center' }}>LOGGED IN SUCCESSFULLY</h2>)\n                : (\n                    <div className=\"form-container\">\n                        {isError !== null && (<p style={{ color: 'red' }}>The e-mail or password incorrect!</p>)}\n                        <Form onSubmit={handleSubmit(onSubmit)}>\n                            <Form.Group>\n                                <Form.Label>*E-mail</Form.Label>\n                                {errors.Email && (<span style={{ color: 'red', marginLeft: '10px' }}>Required field</span>)}\n                                <Form.Control\n                                    type=\"mail\"\n                                    placeholder=\"Enter your e-mail\"\n                                    name=\"Email\"\n                                    ref={register({ required: true, maxLength: 30 })}\n                                />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>*Password</Form.Label>\n                                {errors.Password && (<span style={{ color: 'red', marginLeft: '10px' }}>Required field</span>)}\n                                <Form.Control\n                                    type=\"password\"\n                                    placeholder=\"Enter your password\"\n                                    name=\"Password\"\n                                    ref={register({ required: true, maxLength: 15 })}\n                                />\n                            </Form.Group>\n                            <Button variant=\"info\" type=\"submit\">LOG IN</Button>\n                        </Form>\n                    </div>\n                )}\n        </>\n    );\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: selectors.getAuth(state),\n    isError: selectors.getError(state),\n});\n\nconst mapDispatchToProps = {\n    login: services.login,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)\n","const mainRouter = ({\n    HOME: '/',\n    NEWS: '/news',\n    LOGIN: '/login',\n    ERROR: '/error',\n})\n\nexport default mainRouter\n","import { LandingPage } from '../pages/LandingPage';\nimport NewsHub from '../pages/NewsHub';\nimport LoginPage from '../pages/LoginPage';\nimport routes from './route';\n\nexport const NavigationRoute = [\n    {\n        name: 'home',\n        path: routes.HOME,\n        component: LandingPage,\n    },\n    {\n        name: 'news',\n        path: routes.NEWS,\n        component: NewsHub,\n    },\n    {\n        name: 'login',\n        path: routes.LOGIN,\n        component: LoginPage,\n    },\n]\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nexport const LandingPage = () => {\n    return (\n        <div className=\"home-container\">\n            <Alert variant=\"info\">\n                <Alert.Heading className=\"landingPageTitle\">Rise and shine, Mr. Freeman</Alert.Heading>\n                <p>\n                    Rise and... shine.\n                    Not that I... wish to imply you have been sleeping on the job.\n                    No one is more deserving of a rest... and all the effort in the world would have gone to waste until... well, let's just say your hour has... come again.\n                    The right man in the wrong place can make all the difference in the world.\n                    So, wake up, Mr. Freeman. Wake up and... smell the ashes...\n                </p>\n            </Alert>\n        </div>\n    )\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { NavigationRoute } from '../routers/NavigationRoute'\n\nconst NavigationBar = () => {\n    const navbar = (\n        NavigationRoute.map(item => (\n            <NavLink\n                exact\n                className=\"nav-links\"\n                to={item.path}\n                key={item.name}\n                activeStyle={{ color: '#41e0fd' }}\n            >\n                {item.name}\n            </NavLink>\n        ))\n    )\n\n    return (\n        <Navbar sticky=\"top\" variant=\"dark\" bg=\"dark\" className=\"navbar\">\n            <Nav>\n                {navbar}\n            </Nav>\n        </Navbar>\n    )\n}\n\nexport default NavigationBar","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <div className=\"footer-container\">\n            <h4>2021 © <a href=\"https://www.erbilnas.com\">Erbil Nas.</a> All rights reserved.</h4>\n        </div>\n    )\n}\n\nexport default Footer","import React from 'react'\n\nexport const ErrorPage = () => {\n    return (\n        <h2 className=\"errorPageTitle\">NOT FOUND 😪</h2>\n    )\n}\n","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { NavigationRoute } from './routers/NavigationRoute'\nimport routes from './routers/route'\nimport NavigationBar from './components/Navbar'\nimport Footer from './components/Footer'\nimport { ErrorPage } from './pages/ErrorPage'\n\nimport './App.css'\n\nfunction App() {\n  const router = (\n    NavigationRoute.map(({ path, component }, key) => (\n      <Route exact path={path} key={key} component={component} />\n    ))\n  )\n\n  return (\n    <div className=\"App\">\n      <NavigationBar />\n      <Switch>\n        {router}\n        <Route exact path={routes.ERROR} component={ErrorPage} />\n        <Redirect from=\"*\" to={routes.ERROR} />\n      </Switch>\n      <Footer />\n\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { Provider } from 'react-redux'\nimport { store, persistor } from './redux/store'\nimport App from './App'\n\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <BrowserRouter>\n        <Route component={App} />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}